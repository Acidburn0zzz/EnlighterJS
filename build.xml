<?xml version="1.0" encoding="UTF-8"?>

<!--
	ANT-based build script for EnlighterJS
	
	@author		Andi Dittrich <andi.dittrich@a3non.org>
	@version	1.6
	@license	The MIT License (X11)
	
!-->
<project name="EnlighterJS" default="build" basedir=".">
    <!-- AN-contrib !-->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

	<!-- Target Properties ! -->
	<property name="build.dir" value="Build/" />
    <property name="tmp.dir" value=".tmp/" />
	<property name="www.dir" value="PublicHtml/" />
    <property name="example.dir" value="Examples/" />
	<property name="build.var.version" value="2.7.0" />
	
	<!-- Themes to include !-->
	<property name="include.themes" value="Enlighter Godzilla Beyond Classic MooTwo Eclipse Droide Git Mocha MooTools Panic Tutti Twilight" />

	<!-- Languages to include !-->
	<property name="include.languages" value="AvrAsm Css Cpp CSharp Diff Ini Java Javascript Json Matlab Markdown Nsis Php Python RAW Ruby Rust Shell Sql Vhdl Xml" />

	<!-- Sourcefiles to include !-->
	<property name="include.JsBaseSources" value="EnlighterJS TextFilter Dom/MooTools/Dom Dom/MooTools/Element SpecialLineHighlighter LanguageManager Tokenizer Token Renderer/InlineRenderer Renderer/BlockRenderer Tokenizer/Lazy Tokenizer/Xml UI/CodeWindow UI/Toolbar" />

	<!-- Additional Features to include !-->
	<property name="include.JsFeatures" value="Native/Element.EnlighterJS Util/Helper UI/TabPane Util/Metainit Util/Init" />

    <!-- set date vars !-->
    <tstamp/>

    <!-- CP Notice !-->
    <property name="cpnotice" value="/*! EnlighterJS Syntax Highlighter ${build.var.version} | MIT-Style X11 License | http://enlighterjs.andidittrich.de/ | ${TODAY} */"></property>

    <!-- convert source lists to file lists !-->
    <propertyregex property="source.css" input="Base ${include.themes}" regexp="(\w+)\b" replace="Source/Themes/\1.css" global="true" />
    <propertyregex property="source.languages.js" input="Generic ${include.languages}" regexp="([\w/]+)\b" replace="Source/Language/\1.js" global="true" />
    <propertyregex property="source.core.js" input="${include.JsBaseSources} ${include.JsFeatures}" regexp="([\w/\.]+)\b" replace="Source/\1.js" global="true" />

    <!-- Generate Build -->
	<target name="build">
		<!-- Cleanup Build Dir -->
		<delete dir="${build.dir}" />
        <mkdir dir="${build.dir}" />
        <mkdir dir="${tmp.dir}" />
		
		<!-- ****************************** BUILD LIBRARY **************************** -->
		<ant antfile="Util/js-concat-compress.xml">
			<property name="compress.input" value="${source.core.js} ${source.languages.js}" />
			<property name="compress.output" value="EnlighterJS.min.js" />
			<property name="uncompress.output" value="EnlighterJS.js" />
		</ant>
        <ant antfile="Util/css-concat-compress.xml">
            <property name="compress.input" value="${source.css}" />
            <property name="compress.output" value="EnlighterJS.min.css" />
            <property name="uncompress.output" value="EnlighterJS.css" />
        </ant>

        <!-- Store JS + CSS Files !-->
        <echo message="${source.css}" file=".tmp/css.txt"></echo>
        <echo message="${source.core.js} ${source.languages.js}" file=".tmp/js.txt"></echo>
        <echo message="${include.languages}" file=".tmp/languages.txt"></echo>
        <echo message="${include.themes}" file=".tmp/themes.txt"></echo>

		<!-- Change Package Versions !-->
		<replaceregexp byline="true" flags="s">
			<regexp pattern="current: v(.*)" />
			<substitution expression="current: v${build.var.version}"/>
			<fileset file="package.yml" />
		</replaceregexp>
		
		<!-- Merge Readme/Documentation - sort by numeric prefix!-->
		<echo message="Merging Docs" />
		<concat destfile="README.md" fixlastline="yes">
			<sort xmlns:rcmp="antlib:org.apache.tools.ant.types.resources.comparators">
				<fileset dir="Docs" includes="*.md"/>
				<rcmp:name />
			</sort>
		</concat>
		
		<!-- Copy CONTRIBUTE.md from docs !-->
		<copy file="Docs/07-Contribution.md" tofile="CONTRIBUTE.md" />
	</target>

	<target name="webbuild" depends="build">
		<!-- Copy files !-->
		<copy file="CHANGES.md" tofile="${build.dir}CHANGES.md" />
		<copy file="LICENSE.md" tofile="${build.dir}LICENSE.md" />
		<copy file="README.md" tofile="${build.dir}README.md" />

		<!-- Create Archive !-->
		<zip destfile="${build.dir}/EnlighterJS.zip" basedir="${build.dir}" />
	</target>
	
	<!-- Generate Examples -->
	<target name="examples">
		<!-- Cleanup www Dir -->
		<delete dir="${example.dir}" />
		<mkdir dir="${example.dir}"/>

        <!-- Std Examples !-->
		<exec executable="php">
			<arg value="Util/ExampleGenerator.php" />
			<arg value="${example.dir}" />
		</exec>
	</target>

    <!-- Dev Pages !-->
    <target name="dev">
        <!-- Development Pages based on Examples template !-->
        <exec executable="php">
            <arg value="Util/DevPageGenerator.php" />
        </exec>
    </target>
	
	<!-- Generate Demo Website !-->
	<target name="full" depends="build,examples">
		<!-- Cleanup www Dir -->
		<delete dir="${www.dir}" />
		<mkdir dir="${www.dir}"/>	
				
		<exec executable="php">
			<arg value="Util/PageGenerator.php" />
			<arg value="${www.dir}" />
			<arg value="v${build.var.version}" />
		</exec>		
		
		<!-- Copy resources !-->
		<copy todir="${www.dir}Resources">
			<fileset dir="Resources"/>
		</copy>
        <!-- Copy Examples !-->
        <copy todir="${www.dir}Examples">
            <fileset dir="Examples"/>
        </copy>
		
		<!-- Copy Screenshots -->
		<copy file="screenshot1.png" tofile="${www.dir}screenshot1.png" />
		<copy file="screenshot2.png" tofile="${www.dir}screenshot2.png" />

		<!-- Copy License and fix linebreaks !-->
		<copy file="LICENSE.md" tofile="${www.dir}LICENSE.txt" />
		<fixcrlf eol="crlf" file="${www.dir}LICENSE.txt" />

		<!-- Copy EnlighterJS Files !-->
		<copy todir="${www.dir}Build">
			<fileset dir="Build/"/>
		</copy>
	</target>

    <!-- Test the Enlighter Plugin with DEV versions !-->
    <target name="wptest" depends="build">

        <copy todir="C:\Development\htdocs\wordpress2\wp-content\plugins\enlighter\resources" overwrite="true">
            <fileset dir="Build/" />
        </copy>
        <copy todir="C:\Development\htdocs\wordpress\wp-content\plugins\enlighter\resources" overwrite="true">
            <fileset dir="Build/" />
        </copy>
    </target>
	
</project>